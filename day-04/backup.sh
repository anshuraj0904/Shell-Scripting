#!/bin/bash


<< readme
This is a script for backup with 5 day rotation.

Usage: ./backup.sh <path-to-source> <path-to-backup-folder>
readme


function display_usage() {
      echo  "Usage: ./backup.sh <path-to-source> <path-to-backup-folder>"
}


if [[ $# -eq 0 ]];
then
     display_usage
fi


source_dir=$1
backup_dir=$2
timestamp=$(date '+%Y-%m-%d-%H-%M-%S')

function create_backup() {
  zip -r "${backup_dir}/backup_${timestamp}.zip" "${source_dir}" > /dev/null  
  # This line above wil recursively zip the source_dir into backup_dir/backup_timestamp.
    # > /dev/null will mean that the output generated by zip will go to /dev/null, which is the black-hole of devops.

  if [[ $? -eq 0 ]]; # $? means the error response for the execution of the above command.
  then
        echo "Backup successfull! for ${timestamp}" 
  fi
}

if ! create_backup; then
	echo "Error while creating the backup!"
	exit 1
fi


function perform_rotation() {
	backups=($(ls -t "${backup_dir}/backup_"*.zip 2> /dev/null))
     	# 2> /dev/null will put the errors into /dev/null
	# Getting all the zipped files inside the backups from backed_up_folder, and putting the extra () converts the backups into an array.
    #  echo "Folders: ${backups[@]}"
     # backups[@] for printing the entire array

     if [[ "${#backups[@]}" -gt 5 ]]; 
	     # #backups[@] will tell us the length of the array named backups.
     then
	   echo "Performing rotation for 5 days........"

	  backups_to_remove=("${backups[@]:5}")
	  # This cmd above  will list the list from index 5 to last.
	  # echo "backed up : ${backups_to_remove[@]}" 

	  for backup in "${backups_to_remove[@]}";
	  do
		  rm -f ${backup}
	  done
	 echo "Deleted the prolonging backups successfully!" 
     fi   
}


perform_rotation
